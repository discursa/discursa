datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String
  email          String   @unique
  hashedPassword String?
  role           String   @default("USER")

  tokens   Token[]
  sessions Session[]
}

model Session {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User?  @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model Token {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hashedToken String
  type        String
  expiresAt   DateTime
  sentTo      String

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  @@unique([hashedToken, type])
}

model Discussion {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  id_         Int      @unique
  name        String   @unique
  message     String
  visibility  String
  voting      Boolean
  upvotes     Int      @default(0)
  category    String
  authorId    String
  members     String[]
  vouters     String[]
  subscribers String[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  message   String   @unique
  id_       Int      @unique
  replierId String
  parent    Int
  authorId  String
  type      String
}

model Notification {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  id_         Int      @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @unique
  type        String
  description String
  recipient   String
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  id_         Int      @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @unique
  description String
}

model Thread {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  id_        Int      @unique
  name       String   @unique
  visibility String
  members    String[]
  parent     Int
  authorId   String
}
